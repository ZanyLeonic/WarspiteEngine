# C/C++ with GCC
# Build your C/C++ project with GCC using make.
# Add steps that publish test results, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/c-cpp/gcc

trigger:
- master
- develop

variables:
- name: VCPKG_BINARY_SOURCES
  value: 'clear;nuget,https://poweredbykurisu.pkgs.visualstudio.com/WarspiteGame/_packaging/WarspiteGame_Feed/nuget/v3/index.json,readwrite'

jobs:
- job: "Windows_x64"
  pool:
    vmImage: 'windows-2019'
  steps:
  - task: NuGetAuthenticate@0
    displayName: "Authenicating NuGet"
  - task: PowerShell@2
    displayName: "Installing dependencies + Making build files"
    inputs:
      filePath: 'build-deps.ps1'
      arguments: 'Release rel-build'
      workingDirectory: '$(System.DefaultWorkingDirectory)'

  - task: MSBuild@1
    displayName: "Compiling project"
    inputs:
      solution: 'rel-build/ALL_BUILD.vcxproj'
      msbuildArchitecture: 'x64'
      platform: 'x64'
      configuration: 'Release'
      maximumCpuCount: true
      createLogFile: true
  - task: UniversalPackages@0
    displayName: "Downloading Authoring tools"
    inputs:
      command: 'download'
      downloadDirectory: '$(System.DefaultWorkingDirectory)\..\WarspiteGame.AuthoringTools\'
      feedsToUse: 'internal'
      vstsFeed: '55e16e5e-fe3a-4148-a1b4-040681908830'
      vstsFeedPackage: '83c17eec-44d4-4271-8337-aa4ff030f84f'
      vstsPackageVersion: '*'
  - task: CopyFiles@2
    displayName: "Copying SDK to output"
    inputs:
      SourceFolder: '$(System.DefaultWorkingDirectory)\sdk\'
      Contents: '**'
      TargetFolder: '$(System.DefaultWorkingDirectory)\rel-build\Release\sdk\'
  - task: CopyFiles@2
    displayName: "Copying Authoring tools to output"
    inputs:
      SourceFolder: '$(System.DefaultWorkingDirectory)\..\WarspiteGame.AuthoringTools\'
      Contents: '**'
      TargetFolder: '$(System.DefaultWorkingDirectory)\rel-build\Release\sdk\bin\'
      flattenFolders: true
  - task: nsis@2
    displayName: "Creating installer"
    inputs:
      scriptFile: 'dist/WarspiteInstaller.nsi'
      justInclude: 'no'
      includeMorePlugins: 'no'
      includeCustomPlugins: 'no'
  - task: PublishBuildArtifacts@1
    displayName: "Publishing build artifacts"
    inputs:
      PathtoPublish: 'rel-build/Release/'
      ArtifactName: 'windows-x64'
      publishLocation: 'Container'
  - task: PublishBuildArtifacts@1
    displayName: "Publishing build artifacts"
    inputs:
      PathtoPublish: 'dist/output/'
      ArtifactName: 'windows-x64-inst'
      publishLocation: 'Container'

- job: "Windows_x86"
  pool:
    vmImage: 'windows-2019'
  steps:
  - task: NuGetAuthenticate@0
    displayName: "Authenicating NuGet"
  - task: PowerShell@2
    displayName: "Installing dependencies + Making build files"
    inputs:
     filePath: 'build-deps-ci-x86.ps1'
     arguments: 'Release true'
     workingDirectory: '$(System.DefaultWorkingDirectory)'

  - task: MSBuild@1
    displayName: "Compiling project"
    inputs:
      solution: 'build-win32/ALL_BUILD.vcxproj'
      msbuildArchitecture: 'x86'
      platform: 'Win32'
      configuration: 'Release'
      maximumCpuCount: true
      createLogFile: true
  - task: UniversalPackages@0
    displayName: "Downloading Authoring tools"
    inputs:
      command: 'download'
      downloadDirectory: '$(System.DefaultWorkingDirectory)\..\WarspiteGame.AuthoringTools\'
      feedsToUse: 'internal'
      vstsFeed: '55e16e5e-fe3a-4148-a1b4-040681908830'
      vstsFeedPackage: '83c17eec-44d4-4271-8337-aa4ff030f84f'
      vstsPackageVersion: '*'
  - task: CopyFiles@2
    displayName: "Copying SDK to output"
    inputs:
      SourceFolder: '$(System.DefaultWorkingDirectory)\sdk\'
      Contents: '**'
      TargetFolder: '$(System.DefaultWorkingDirectory)\build-win32\Release\sdk\'
  - task: CopyFiles@2
    displayName: "Copying Authoring tools to output"
    inputs:
      SourceFolder: '$(System.DefaultWorkingDirectory)\..\WarspiteGame.AuthoringTools\'
      Contents: '**'
      TargetFolder: '$(System.DefaultWorkingDirectory)\build-win32\Release\sdk\bin\'
      flattenFolders: true
  - task: PublishBuildArtifacts@1
    displayName: "Publishing build artifacts"
    inputs:
      PathtoPublish: 'build-win32/Release/'
      ArtifactName: 'windows-x86'
      publishLocation: 'Container'

- job: Ubuntu
  pool:
    vmImage: ubuntu-20.04
  steps:
  - task: Bash@3
    displayName: "Installing dependencies + Making build files"
    inputs:
      filePath: 'build-deps.sh'
      workingDirectory: '$(System.DefaultWorkingDirectory)'

  - task: Bash@3
    displayName: "Building project"
    inputs:
      filePath: 'build.sh'
      workingDirectory: '$(System.DefaultWorkingDirectory)'

  - task: UniversalPackages@0
    displayName: "Downloading Authoring tools"
    inputs:
      command: 'download'
      downloadDirectory: '$(System.DefaultWorkingDirectory)/WarspiteGame.AuthoringTools/'
      feedsToUse: 'internal'
      vstsFeed: '55e16e5e-fe3a-4148-a1b4-040681908830'
      vstsFeedPackage: '83c17eec-44d4-4271-8337-aa4ff030f84f'
      vstsPackageVersion: '*'

  - task: CopyFiles@2
    displayName: "Copying SDK to output"
    inputs:
      SourceFolder: '$(System.DefaultWorkingDirectory)/sdk/'
      Contents: '**'
      TargetFolder: '/usr/local/bin/Warspite/sdk/'

  - task: CopyFiles@2
    displayName: "Copying Authoring tools to output"
    inputs:
      SourceFolder: '$(System.DefaultWorkingDirectory)/WarspiteGame.AuthoringTools/'
      Contents: '**'
      TargetFolder: '/usr/local/bin/Warspite/sdk/bin/'
      flattenFolders: true

  - task: PublishBuildArtifacts@1
    displayName: "Publishing build artifacts"
    inputs:
      PathtoPublish: '/usr/local/bin/Warspite/'
      ArtifactName: 'linux'
      publishLocation: 'Container'

- job: Ubuntu_ARM64
  pool:
    RPi
  steps:
  - task: Bash@3
    displayName: "Installing dependencies + Making build files"
    inputs:
      filePath: 'build-deps.sh'
      workingDirectory: '$(System.DefaultWorkingDirectory)'

  - task: Bash@3
    displayName: "Building project"
    inputs:
      filePath: 'build.sh'
      workingDirectory: '$(System.DefaultWorkingDirectory)'
  
  - task: UniversalPackages@0
    displayName: "Downloading Authoring tools"
    inputs:
      command: 'download'
      downloadDirectory: '$(System.DefaultWorkingDirectory)/WarspiteGame.AuthoringTools/'
      feedsToUse: 'internal'
      vstsFeed: '55e16e5e-fe3a-4148-a1b4-040681908830'
      vstsFeedPackage: '83c17eec-44d4-4271-8337-aa4ff030f84f'
      vstsPackageVersion: '*'

  - task: CopyFiles@2
    displayName: "Copying SDK to output"
    inputs:
      SourceFolder: '$(System.DefaultWorkingDirectory)/sdk/'
      Contents: '**'
      TargetFolder: '/usr/local/bin/Warspite/sdk/'
      
  - task: CopyFiles@2
    displayName: "Copying Authoring tools to output"
    inputs:
      SourceFolder: '$(System.DefaultWorkingDirectory)/WarspiteGame.AuthoringTools/'
      Contents: '**'
      TargetFolder: '/usr/local/bin/Warspite/sdk/bin/'
      flattenFolders: true

  - task: PublishBuildArtifacts@1
    displayName: "Publishing build artifacts"
    inputs:
      PathtoPublish: '/usr/local/bin/Warspite/'
      ArtifactName: 'linux-arm64'
      publishLocation: 'Container'
