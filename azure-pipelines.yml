# C/C++ with GCC
# Build your C/C++ project with GCC using make.
# Add steps that publish test results, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/c-cpp/gcc

trigger:
- master
- develop
- launchv2

jobs:
- job: "Windows x64"
  pool:
    vmImage: 'windows-2019'
  steps:
  - task: Cache@2
    inputs:
      key: 'v8 | vcpkg | "$(Agent.OS)" | "C:\vcpkg\.git\HEAD"'
      restoreKeys: |
        v8 | vcpkg | "$(Agent.OS)"
        vcpkg | "$(Agent.OS)"
        vcpkg
      path: 'C:\vcpkg'
      cacheHitVar: VCPKG_CACHE_RESTORED
    displayName: Cache vcpkg

  - task: PowerShell@2
    displayName: "Installing dependencies + Making build files"
    inputs:
     filePath: 'build-deps.ps1'
     workingDirectory: '$(System.DefaultWorkingDirectory)'

  - task: MSBuild@1
    displayName: "Compiling project"
    inputs:
      solution: 'build/ALL_BUILD.vcxproj'
      msbuildArchitecture: 'x64'
      platform: 'x64'
      configuration: 'Debug'
      maximumCpuCount: true
      createLogFile: true

  - task: PublishBuildArtifacts@1
    displayName: "Publishing build artifacts"
    inputs:
      PathtoPublish: 'build/Debug/'
      ArtifactName: 'windows-x64'
      publishLocation: 'Container'

- job: "Windows x86"
  pool:
    vmImage: 'windows-2019'
  steps:
  - task: Cache@2
    inputs:
      key: 'v1-x86 | vcpkg | "$(Agent.OS)" | "C:\vcpkg\.git\HEAD"'
      restoreKeys: |
        v1-x86 | vcpkg | "$(Agent.OS)"
        vcpkg | "$(Agent.OS)"
        vcpkg
      path: 'C:\vcpkg'
      cacheHitVar: VCPKG_CACHE_RESTORED
    displayName: Cache vcpkg

  - task: PowerShell@2
    displayName: "Installing dependencies + Making build files"
    inputs:
     filePath: 'build-deps-x86.ps1'
     workingDirectory: '$(System.DefaultWorkingDirectory)'

  - task: MSBuild@1
    displayName: "Compiling project"
    inputs:
      solution: 'build/ALL_BUILD.vcxproj'
      msbuildArchitecture: 'x86'
      platform: 'x86'
      configuration: 'Debug'
      maximumCpuCount: true
      createLogFile: true

  - task: PublishBuildArtifacts@1
    displayName: "Publishing build artifacts"
    inputs:
      PathtoPublish: 'build/Debug/'
      ArtifactName: 'windows-x86'
      publishLocation: 'Container'

- job: Ubuntu
  pool:
    vmImage: ubuntu-20.04
  steps:
    - task: Bash@3
      displayName: "Installing dependencies + Making build files"
      inputs:
        filePath: 'build-deps.sh'
        workingDirectory: '$(System.DefaultWorkingDirectory)'

    - task: Bash@3
      displayName: "Building project"
      inputs:
        filePath: 'build.sh'
        workingDirectory: '$(System.DefaultWorkingDirectory)'

    - task: PublishBuildArtifacts@1
      displayName: "Publishing build artifacts"
      inputs:
        PathtoPublish: '/usr/local/bin/Warspite/'
        ArtifactName: 'linux'
        publishLocation: 'Container'
